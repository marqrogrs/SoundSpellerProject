  search = () => {
    let phrase = [];
    // filter state for right sound / sounds
    phrase = this.state.sounds.filter((sound) =>
      sound.sound.includes(this.state.words)
    );
    console.log(phrase);

    if (phrase.length === 0) {
      const words = this.state.words.split(" ");
      console.log(words);

      console.log(this.state.sounds.map((sound) => sound.sound.match(words)));
    }

    // get files paths
    let sources = [];
    phrase.map((s) => {
      let t = require(`./flac/${s.path}`);
      sources.push(t);
    });

    // chain sounds
    let count = 0;
    const onEnd = function() {
      count += 1;

      try {
        // play next sound
        howler[count].play();
      } catch (error) {
        // unload howler
        howler[count - 1].unload();
      }
    };

    // build howler
    const howler = [];
    sources.forEach((s) => {
      howler.push(new Howl({ src: s, onend: onEnd }));
    });
    // play first sound
    howler[0].play();
  };